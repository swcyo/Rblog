upset(fromList(list),
nsets = dim(fromList(list))[2],keep.order = T,
order.by = 'freq')
upset(fromList(list),
nsets = dim(fromList(list))[2],keep.order = T
)
upset(fromList(list),
nsets = dim(fromList(list))[2],
order.by = 'freq'，
upset(fromList(list),
nsets = dim(fromList(list))[2],
order.by = 'freq',
queries = list(list(query = intersects,
params = list(colnames(fromList(list_down))),
active = T)))
upset(fromList(list),
nsets = dim(fromList(list))[2],
order.by = 'freq',
queries = list(list(query = intersects,
params = list(colnames(fromList(list))),
active = T)))
upset(fromList(list),
nsets = dim(fromList(list))[2],
order.by = 'freq',
empty.intersections = 'on',
queries = list(list(query = intersects,
params = list(colnames(fromList(list))),
active = T)))
upset(fromList(list),
nsets = dim(fromList(list))[2],
order.by = 'freq',
empty.intersections = 'on',
set_size.show = T,
queries = list(list(query = intersects,
params = list(colnames(fromList(list))),
active = T)))
upset(fromList(list),
nsets = dim(fromList(list))[2],
order.by = 'freq',
empty.intersections = 'on',
set_size.show = T,
main.bar.color = "brown", # 设置交集数柱子的颜色
sets.bar.color = ggpubr::get_palette('npg',6), ## 设置数据集颜色，选择ggpubr的配色
queries = list(list(query = intersects,
params = list(colnames(fromList(list))),
active = T)))
blogdown:::new_post_addin()
remove(list)
geo120736 = geo_download("GSE120736",
destdir=tempdir(),
by_annopbrobe = T  ### 默认为F，设置为T调用AnnoProbe
)
library(tinyarray)
geo120736 = geo_download("GSE120736",
destdir=tempdir(),
by_annopbrobe = T  ### 默认为F，设置为T调用AnnoProbe
)
### AnnoProbe是国内的一个GEO镜像，不过有些数据没有收录，因此有些GSE提示不存在，这种情况下只能设置by_annopbrobe = F
boxplot(geo120736$exp)
View(geo120736)
boxplot(geo120736) [,-c(1:50)]
boxplot(geo120736$exp) [,-c(1:50)]
range(geo120736$exp)
ex <- geo120736$exp
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))
LogC <- (qx[5] > 100) ||
(qx[6]-qx[1] > 50 && qx[2] > 0) ||
(qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)
if (LogC) { ex[which(ex <= 0)] <- NaN
geo120736$exp<- log2(ex)
print("log2 transform finished")}else{print("log2 transform not needed")}
remove(ex,qx,LogC)  # 删除多余的
ph120736 <-geo120736$pd
ph120736 <-geo120736$pd
DT::datatable(ph120736)
ph120736 <-geo120736$pd
DT::datatable(head(ph120736))
View(ph120736)
remove(geo120736,ph120736)
blogdown:::serve_site()
library(ggplot2)
library(ComplexUpset)
movies = as.data.frame(ggplot2movies::movies)
install.packages("ggplot2movies")
movies = as.data.frame(ggplot2movies::movies)
View(movies)
head(movies, 3)
genres = colnames(movies)[18:24]
genres
movies[genres] = movies[genres] == 1
t(head(movies[genres], 3))
View(movies)
movies[movies$mpaa == '', 'mpaa'] = NA
movies = na.omit(movies)
set_size = function(w, h, factor=1.5) {
s = 1 * factor
options(
repr.plot.width=w * s,
repr.plot.height=h * s,
repr.plot.res=100 / factor,
jupyter.plot_mimetypes='image/png',
jupyter.plot_scale=1
)
}
set_size(8, 3)
upset(movies, genres, name='genre', width_ratio=0.1)
upset(movies, genres)
upset(movies, genres, name='genre', width_ratio=0.1)
upset(movies, genres)
blogdown:::serve_site()
data(aSAH)
library(pROC)
data(aSAH)
force(aSAH)
View(aSAH)
oc(aSAH$outcome, aSAH$s100b,
levels=c("Good", "Poor"))
roc(aSAH$outcome, aSAH$s100b,
levels=c("Good", "Poor"))
roc(aSAH$outcome, aSAH$s100b)
roc(outcome ~ s100b, aSAH)
roc(outcome ~ s100b, data=aSAH)
roc(aSAH$outcome, aSAH$s100b, smooth=TRUE)
roc(aSAH$outcome, aSAH$s100b)
plot(roc(aSAH$outcome, aSAH$s100b))
ggroc(roc(aSAH$outcome, aSAH$s100b))
plot(roc(aSAH$outcome, aSAH$s100b))
ggroc(list(s100b=rocobj, wfns=rocobj2, ndka=roc(aSAH$outcome, aSAH$ndka)))
ggroc(list(s100b=rocobj, wfns=roc(aSAH$outcome, aSAH$wfns), ndka=roc(aSAH$outcome, aSAH$ndka)))
ggroc(list(s100b=roc(aSAH$outcome, aSAH$s100b), wfns=roc(aSAH$outcome, aSAH$wfns), ndka=roc(aSAH$outcome, aSAH$ndka)))
ggroc(list(s100b=roc(aSAH$outcome, aSAH$s100b), wfns=roc(aSAH$outcome, aSAH$wfns), ndka=roc(aSAH$outcome, aSAH$ndka)))+ggplot2::theme_bw()
library(readxl)
ROC曲线 <- read_excel("~/Desktop/ROC曲线.xlsx")
View(ROC曲线)
ggroc(list(a=roc(ROC曲线$outcome,ROC曲线$a), b=roc(ROC曲线$outcome,ROC曲线$b), c=roc(ROC曲线$outcome,ROC曲线$c)))+ggplot2::theme_bw()
ggroc(list(a=roc(ROC曲线$outcome,ROC曲线$a), b=roc(ROC曲线$outcome,ROC曲线$b), c=roc(ROC曲线$outcome,ROC曲线$c)),linetype=4)+ggplot2::theme_bw()
ggroc(roc(outcome~a+b+c,data=ROC曲线))
ggroc(roc(outcome~a+b+c,data=ROC曲线,auc=T))
ggroc(roc(outcome~a+b+c,data=ROC曲线,auc=T))+facet_grid(.~name)
ggroc(roc(outcome~a+b+c,data=ROC曲线,auc=T))+ggplot2::facet_grid(.~name)
ggroc(roc(outcome~a+b+c,data=ROC曲线,smooth=T))+ggplot2::facet_grid(.~name)
ggroc(roc(outcome~a+b+c,data=ROC曲线,add=T))+ggplot2::facet_grid(.~name)
ggroc(roc(outcome~a+b+c,data=ROC曲线,AUC=T,ci=T,plot=T,add=T))+ggplot2::facet_grid(.~name)
ggroc(roc(outcome~a+b+c,data=ROC曲线,auc=T,ci=T))
ggroc(roc(outcome~a+b+c,data=ROC曲线,auc=T,ci=T,plot=T))
View(ROC曲线)
ggpubr::ggboxplot(aSAH,'outcome','wfns',add = 'jitter',color = 'outcome')
ggpubr::ggboxplot(aSAH,'outcome','wfns',color = 'outcome')
ggpubr::ggboxplot(aSAH,'outcome','s100b',color = 'outcome')
ggpubr::ggboxplot(aSAH,'outcome','s100b',color = 'outcome',add = 'jitter')
blogdown:::serve_site()
blogdown:::serve_site()
library(readr)
GSE13507 <- read_csv("~/Desktop/2021大学自主资助支持立项校级科研项目评审工作的通知/data/GEO/GSE13507-cancer.csv")
View(GSE13507)
library(ggpubr)
ggboxplot(GSE13507,'grade','S100A8')
ggboxplot(GSE13507,'grade','S100A8')+stat_compare_means()
ggboxplot(GSE13507,'invasiveness','S100A8')
ggboxplot(GSE13507,'invasiveness','S100A8')+stat_compare_means()
ggboxplot(GSE13507,'overall survival','S100A8')+stat_compare_means()
ggboxplot(GSE13507,'progression','S100A8')+stat_compare_means()
ggboxplot(GSE13507,'recurrence','S100A8')+stat_compare_means()
ggboxplot(GSE13507,'sex','S100A8')+stat_compare_means()
library(survminer)
library(survival)
library(pROC)
roc(grade~S100A8,data=GSE13507,aur=TRUE,ci=TRUE,levels=c('high','low'),direction=">" )
roc(invasiveness~S100A8,data=GSE13507,aur=TRUE,ci=TRUE,levels=c('high','low'),direction=">" )
roc(invasiveness~S100A8,data=GSE13507,aur=TRUE,ci=TRUE,levels=c('high','low'),direction=">" )
roc(invasiveness~S100A8,data=GSE13507,aur=TRUE,ci=TRUE,levels=c('muscle invasive','non-muscle invasive'),direction=">" )
roc(grade~S100A8,GSE13507)
roc(grade~S100A8,GSE13507,smooth=T)
plot(roc(grade~S100A8,GSE13507))
ggroc(roc(grade~S100A8,GSE13507), legacy.axes = TRUE)+geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1), color="darkgrey", linetype=4)+theme_bw()
ggroc(roc(invasiveness~S100A8,GSE13507), legacy.axes = TRUE)+geom_segment(aes(x = 0, xend = 1, y = 0, yend = 1), color="darkgrey", linetype=4)+theme_bw()
GSE13507$group<-ifelse(GSE13507$S100A8>median(GSE13507$S100A8),'High','Low')
fit<- survfit(Surv(survivial mooth, overall survival) ~ group, data = GSE13507)
fit<- survfit(Surv(survivial month, overall survival) ~ group, data = GSE13507)
fit<- survfit(Surv(`survival month`, `overall survival`) ~ group, data = GSE13507)
GSE13507$`overall survival`<-factor(data$sex,levels = c(death,survival), #设置需要转换的数字
labels = c('0','1') #定义数字相应的标签
)
GSE13507$`overall survival`=ifelse(GSE13507$`overall survival`=death,0,1)
stringr::GSE13507$`overall survival`=ifelse(str_detect(GSE13507$`overall survival`,"death"),"0","1")
library(stringr)
GSE13507$`overall survival`=ifelse(str_detect(GSE13507$`overall survival`,"death"),"0","1")
fit<-survfit(Surv(`survival month`,`overall survival`)~group,data=GSE13507)
remove(GSE13507)
library(readr)
GSE13507 <- read_csv("~/Desktop/2021大学自主资助支持立项校级科研项目评审工作的通知/data/GEO/GSE13507-cancer.csv")
View(GSE13507)
GSE13507$group<-ifelse(GSE13507$S100A8>median(GSE13507$S100A8),'High','Low')
fit<-survfit(Surv(`survival month`,`overall survival`)~group,data=GSE13507)
summary(fit)
fit1<-survfit(Surv(`survival month`,`cancer specific survival`)~group,data=GSE13507)
plot(fit)
plot(fit2)
plot(fit1)
View(fit1)
ggsurvplot(fit,data = GSE13507,
palette = 'lancet', #你可以试着用jcp
linetype = 1, #曲线类型，默认为1即可
conf.int = T,conf.int.style='step', #置信区间，按虚线分布
pval = T,pval.method = T,#显示P值和方法
surv.median.line = 'hv',#显示中位生存时间
risk.table = T,risk.table.pos='in',#显示危险表，并置入图内
legend=c(0.85,0.85),#标签位置
legend.title="Expression",#更改分组名
legend.labs=c("High","Low"),#更改组内数据名，记得不要搞错，最好先看一下
title="Survival curve", #以前是main=，现在改成了title=
ggtheme = theme_bw(base_size = 12) #改一下主题，改一下字体大小
)
ggsurvplot(fit1,data = GSE13507,
palette = 'lancet', #你可以试着用jcp
linetype = 1, #曲线类型，默认为1即可
conf.int = T,conf.int.style='step', #置信区间，按虚线分布
pval = T,pval.method = T,#显示P值和方法
surv.median.line = 'hv',#显示中位生存时间
risk.table = T,risk.table.pos='in',#显示危险表，并置入图内
legend=c(0.85,0.85),#标签位置
title="Survival curve", #以前是main=，现在改成了title=
ggtheme = theme_bw(base_size = 12) #改一下主题，改一下字体大小
)
remotes::install_git('https://gitee.com/swcyo/ROncomine')
library(ROncomine)
onco <- read.csv("~/Desktop/onco.txt", header=FALSE)
View(onco)
View(onco)
box<-Oncomine_box('/Users/mac/Desktop/onco.txt')
box<-Oncomine_bar('/Users/mac/Desktop/onco.txt')
remove(onco)
View(box)
Oncomine_bar_plot(box)
library(ggpubr)
ggboxplot(box,"`Normal Tissue Type`","`Expression value`")
ggboxplot(box,`Normal Tissue Type`,`Expression value`)
ggboxplot(box,'`Normal Tissue Type`','`Expression value`')
Oncomine_box_plot(box)
co<-Oncomine_heatmap_Genes_Coexpression('/Users/mac/Desktop/sum.txt')
View(co)
Oncomine_heatmap_Genes_Coexpression_MatrixForHeatmap(co)
pco<-Oncomine_heatmap_Genes_Coexpression_MatrixForHeatmap(co)
View(pco)
Oncomine_heatmap_Genes_Coexpression_Scatter(co)
ggcorrplot::ggcorrplot(pco)
blogdown:::serve_site()
pheatmap::pheatmap(pco)
install.packages("GGally")
library(GGally)
ggcorr(pco)
ggcorr(pco,
label = TRUE)
View(box)
blogdown:::serve_site()
library(readxl)
KIT <- read_excel("~/Documents/tmh/PCR -C-KIT.xlsx")
View(KIT)
library(ggpubr)
ggbarplot(KIT,'GENE...4','`2^-delta delta CT`',add = 'jitter',color = 'GENE...4')
library(readxl)
KIT <- read_excel("~/Documents/tmh/PCR -C-KIT.xlsx")
View(KIT)
ggbarplot(KIT,'GENE','value')
ggbarplot(KIT,'GENE','value',fill = 'GENE',color = 'GENE')
ggbarplot(KIT,'GENE','value',fill = 'GENE',color = 'GENE',add = c('mean_sd','dotplot'))
ggbarplot(KIT,'GENE','value',fill = 'GENE',color = 'GENE',add = c('mean_sd','dotplot'),palette = 'lancet',)+stat_compare_means(method = 'ANOVA')
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B')))
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B')),c('C-kit-N','C-kit-C'),c('C-kit-N','C-kit-D')))
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C'),c('C-kit-N','C-kit-D')))
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C'),c('C-kit-N','C-kit-D'))
)
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C'))
)
library(ggsci)
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C'),c('C-kit-N','C-kit-D'))
)
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C'),c('C-kit-N','C-kit-D'))
)
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C'),c('C-kit-N','C-kit-D')))
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C'),c('C-kit-N','C-kit-D'))
)
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C')))
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C')))+theme_bw()
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C')))+theme_bw()+theme(legend='none')
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C')))+theme_bw()+ggtitle("C-kit")
KIT <- within(KIT, GENE <- factor(GENE, levels = c("C-kit-N", "C-kit-A",'C-kit-B','C-kit-C')))
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C')))+theme_bw()
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C')))+theme_bw()+theme(legend.title = 'none')
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C')))+theme_bw()
ggplot(KIT ,
aes(x=GENE,y=value,color=GENE,fill=GENE))+
geom_bar(stat="summary",fun=mean,position="dodge")+
stat_summary(fun.data = 'mean_sd', geom = "errorbar", width = 0.5,position = position_dodge(0.9))+
theme_minimal(base_size = 12)+
labs(x=NULL,y='Relative protein expression')+
scale_color_lancet()+
scale_fill_lancet()+
geom_dotplot(stackdir = "center", binaxis = "y",
fill = "lightgray",
dotsize = 0.9,position = position_dodge(0.9))+
stat_compare_means(method = "anova")+
stat_compare_means(method = 't.test',label = "p.signif",comparisons = list(c('C-kit-N','C-kit-A'),c('C-kit-N','C-kit-B'),c('C-kit-N','C-kit-C')))+theme_bw()+
ggtitle("C-Kit")
library(ggstatsplot)
ggbetweenstats(KIT,GENE,value)
ggbarstats(KIT,GENE,value)
ggbarstats(KIT,GENE,value,paired = T)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(AnnoProbe)
gse13507<-geoChina("GSE13507")
View(gse13507)
geo=gse13507[[1]]
View(geo)
library(tinyarray)
geo13507 = geo_download("GSE13507",
destdir=tempdir(),
by_annopbrobe = T  ### 默认为F，设置为T调用AnnoProbe
)
remove(gse13507)
View(geo13507)
geo=geo13507$exp
View(geo)
ph=geo13507$pd
View(ph)
rm(list = ls())
blogdown:::serve_site()
blogdown:::new_post_addin()
