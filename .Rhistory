## 调整泡泡的大小
scale_size_continuous(range=c(3, 8))+ ### 这里可以改点的大小
## 如果用ylab("")或出现左侧空白
labs(y=NULL) +
## 如果没有这一句，上方会到顶
ggtitle("")+
## 设定主题
theme_bw() +
theme(axis.text.x = element_text(colour = "black",
size = font.size, vjust =1 ),
axis.text.y = element_text(colour = "black",
size = font.size, hjust =1 ),
axis.title = element_text(margin=margin(10, 5, 0, 0),
color = "black",size = font.size),
axis.title.y = element_text(angle=90))
p3<-data %>%
## 按照p值排序，选区既定数目的行
arrange(Pvalue) %>%
slice(1:showCategory) %>%
## 开始ggplot2 作图，其中fct_reorder调整因子level的顺序
ggplot(aes(GeneRatio,forcats::fct_reorder(Term,Count)))+
## 画出点图
geom_point(aes(color=Pvalue, size = Count)) +
## 调整颜色，guide_colorbar调整色图的方向
scale_color_continuous(low="red", high="blue", guide=guide_colorbar(reverse=TRUE))+
## 调整泡泡的大小
scale_size_continuous(range=c(3, 8))+ ### 这里可以改点的大小
## 如果用ylab("")或出现左侧空白
labs(y=NULL) +
## 如果没有这一句，上方会到顶
ggtitle("")+
## 设定主题
theme_bw() +
theme(axis.text.x = element_text(colour = "black",
size = font.size, vjust =1 ),
axis.text.y = element_text(colour = "black",
size = font.size, hjust =1 ),
axis.title = element_text(margin=margin(10, 5, 0, 0),
color = "black",size = font.size),
axis.title.y = element_text(angle=90))
p3 +
scale_x_discrete(labels=function(x) str_wrap(x, width=30))
p3 +
scale_x_discrete(labels=function(x) str_wrap(x, width=30)) +facet_grid(group~., scale = "free")
blogdown:::serve_site()
blogdown:::new_post_addin()
library(ggstatsplot)
dim(movies_long)
head(movies_long)
dplyr::glimpse(movies_long)
ggdotplotstats(
data = ggplot2::mpg,
x = cty,
y = manufacturer,
title = "Fuel economy data",
xlab = "city miles per gallon",
caption = substitute(
paste(italic("Source"), ": EPA dataset on http://fueleconomy.gov")
)
)
mod <- lm(formula = mpg ~ cyl * am, data = mtcars)
View(mod)
ggcoefstats(x = mod, output = "plot")
ggcoefstats(x = mod, output = "tidy")
ggcoefstats(x = mod, output = "glance")
ggstatsplot::ggpiestats(ggplot2::msleep, vore)
data(mtcars)
force(mtcars)
ggcorrmat(iris)
View(mtcars)
ggcorrmat(
data = ggplot2::msleep,
cor.vars = sleep_total:bodywt,
partial = TRUE,
output = "dataframe"
)
ggcorrmat(
data = ggplot2::msleep,
cor.vars = sleep_total:bodywt,
partial = TRUE
)
ggstatsplot::ggpiestats(ggplot2::msleep, vore)
ggcorrmat(mtcars[,1:7])
ggcorrmat(mtcars[,1:7],output = 'dataframe')
a<-ggcorrmat(mtcars[,1:7],output = 'dataframe')
View(a)
ggcorrmat(mtcars[,1:7],colors = c('blue','white','red'))
write.csv(mtcar,'data.csv')
write.csv(mtcars,'data.csv')
library(tinyarray)
draw_pca(t(iris[,1:4]),iris$Species)
data("iris")
force(iris)
View(mtcars)
View(iris)
draw_pca(t(iris[,1:4]),iris$Species,style = 'ggplot2')
draw_pca(t(iris[,1:4]),iris$Species,style = '3d')
draw_pca(t(iris[,1:4]),iris$Species,style = '3D')
draw_tsne(t(iris[,1:4]),iris$Species)
rm(list = ls())
exp_dat = matrix(sample(100:1000,40),ncol = 4)
exp_dat[1:(nrow(exp_dat)/2),] =  exp_dat[1:(nrow(exp_dat)/2),]-1000
rownames(exp_dat) = paste0("sample",1:nrow(exp_dat))
colnames(exp_dat) = paste0("gene",1:ncol(exp_dat))
group = rep(c("A","B"),each = nrow(exp_dat)/2)
group = factor(group,levels = c("A","B"))
View(exp_dat)
View(exp_dat)
ggheat(exp_dat,group)
draw_heatmap(exp,group)
ggheat(exp_dat,group,cluster = TRUE)
ggheat(exp_dat,group,cluster = TRUE,show_rownames = FALSE,
show_colnames = FALSE,groupname = "risk",expname = "expression")
ggheat(exp_dat,group,cluster = TRUE,show_rownames = FALSE,
show_colnames = FALSE,groupname = "risk",expname = "expression")+ggplot2::theme_bw()
ggheat(exp_dat,group,cluster = TRUE,show_rownames = FALSE,
show_colnames = FALSE,groupname = "risk",expname = "expression")+ggplot2::ggtitle("heatmap")
draw_boxplot(exp_dat,group)
draw_boxplot(t(iris[,1:4]),iris$Species)
exp <-  matrix(rnorm(60),nrow = 10)
colnames(exp) <- paste0("sample",1:6)
rownames(exp) <- paste0("gene",1:10)
exp[,4:6] = exp[,4:6] +10
exp[1:4,1:4]
group_list <- factor(rep(c("A","B"),each = 3))
draw_boxplot(exp,group_list)
draw_boxplot(exp,group_list,color = c("grey","red"))
draw_volcano(deseq_data)
x = survival::lung
draw_KM(meta = x,
group_list = x$sex,event_col = "status")
cor.full(iris[,-5])
cor.one(iris[,-5],"Sepal.Width")
k = box_surv(log2(exp_hub1+1),exprSet_hub1,meta1);k[[1]]
mtcars
rm(list = ls())
ggcorrmat(mtcars)
ggcorrmat(mtcars,output = 'datafream')
ggcorrmat(mtcars,p.adjust.method = 'none')
ggcorrmat(mtcars,p.adjust.method = 'none',matrix.type = 'lower')
ggcorrmat(mtcars,output = 'datafream',p.adjust.method = 'none',)
data<-ggcorrmat(mtcars,p.adjust.method = 'none',output = 'datafream')
data
View(data)
knitr::kable(data)
DT::datatable(round(data),3)
DT::datatable(round(data[,3:11]),3)
round(data[,3:11]),3)
data[,3:11])
data[3:11]
round( data[3:11],3)
round( data[3:9],3)
DT::datatable(round( data[3:9],3))
ggcorrmat(mtcars,p.adjust.method = 'none',matrix.type = 'full')
ggcorrmat(mtcars,p.adjust.method = 'none',type = 'nonparametric')
ggcorrmat(mtcars,p.adjust.method = 'none',type = 'robust')
ggcorrmat(mtcars,p.adjust.method = 'none',type = 'bayes")
'
)
ggcorrmat(mtcars,p.adjust.method = 'none',type = 'robust',partial = F)
ggcorrmat(mtcars,p.adjust.method = 'none',partial = T)
ggcorrmat(mtcars,p.adjust.method = 'none',pch = 'circle')
ggcorrmat(mtcars,p.adjust.method = 'none',pch = 'pipe')
ggcorrmat(mtcars,p.adjust.method = 'none',pch = 'trigle')
ggcorrmat(mtcars,p.adjust.method = 'none',pch = 'triangle')
ggcorrmat(mtcars,p.adjust.method = 'none',pch = 'diamond')
ggcorrmat(mtcars,p.adjust.method = 'none',pch = 'star')
paletteer::palettes_d_names
paletteer
View(paletteer::palettes_d_names)
ggcorrmat(mtcars,p.adjust.method = 'none',package = 'ggsci',palette = lanonc_lancet)
ggsci::pal_lancet()
ggsci::pal_aaas()
ggpubr::get_palette(palette = 'lancer',3)
ggpubr::get_palette(palette = 'lancer')
ggpubr::get_palette(palette = 'lancet',3)
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#00468BFF" ,"#ED0000FF" ,"#42B540FF"))
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("blue" ,"white" ,"red"))
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"))
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),ggtheme = theme_ggstatsplot())
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),ggtheme = theme_bw)
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),ggtheme = theme_bw)
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),ggtheme = theme_bw())
library(ggplot2)
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),ggtheme = theme_bw())
install.packages("ggprism")
library(ggprism)
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),ggtheme = theme_prism())
ggcorrmat(mtcars,p.adjust.method = 'none',
colors=c("#2874C5" ,"white" ,"#f87669"),
ggtheme = theme_prism(),
title = "Pearson corration")
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),sig.level = 0.01)
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),sig.level = 0.01,type = 'lower')
ggcorrmat(mtcars,p.adjust.method = 'none',colors=c("#2874C5" ,"white" ,"#f87669"),sig.level = 0.01,matrix.type = 'lower')
grouped_ggcorrmat(
data = iris,
grouping.var = Species,
type = "robust",
p.adjust.method = "holm",
plotgrid.args = list(ncol = 1),
annotation.args = list(tag_levels = "i")
）
grouped_ggcorrmat(
data = iris,
grouping.var = Species,
type = "robust",
p.adjust.method = "holm",
plotgrid.args = list(ncol = 1),
annotation.args = list(tag_levels = "i"))
grouped_ggcorrmat(
data = iris,
grouping.var = Species,
type = "robust",
p.adjust.method = "holm",
plotgrid.args = list(ncol = 1),
annotation.args = list(tag_levels = "i"),plotgrid.args=list(ncol=2)
)
mtcars
knitr::kable(mrcats[1:5,1:5])
knitr::kable(mtcats[1:5,1:5])
knitr::kable(mtcars[1:5,1:5])
knitr::kable(mtcars[1:10,1:10])
knitr::kable(round( data[3:9],3))
knitr::kable(round( data[1:10,3:9],3))
knitr::kable(round( data[3:9,1:10],3))
knitr::kable(round( data[1:10,3:9],3))
knitr::kable( data[1:10,1:10],3)
knitr::kable( data[1:10,1:10])
knitr::kable( data[1:10,1:11])
blogdown:::new_post_addin()
draw_pca(t(iris[,1:4]),iris$Species)
iris
iris[1:10,1:10]
iris[1:10,1:5]
knitr::kable(iris[1:10,1:5],caption = "iris数据前十行",align = 'c',format = 'latex')
draw_pca(t(iris[,1:4]),iris$Species,addEllipses = F,)
draw_pca(t(iris[,1:4]),iris$Species,addEllipses = F,color.label = "Species")
draw_pca(t(iris[,1:4]),iris$Species,addEllipses = F,color.label = "Species",style = 'ggplot2')
draw_pca(t(iris[,1:4]),iris$Species,color.label = "Species",style = 'ggplot2')
draw_pca(t(iris[,1:4]),iris$Species,color.label = "Species",style = '3D')
draw_pca(t(iris[,1:4]),iris$Species,
color.label = "Species",
style = 'ggplot2')+ggplot2::theme_bw()
draw_pca(t(iris[,1:4]),iris$Species,
color.label = "Species",
style = 'ggplot2')+ggprism::theme_prism()
p1<-draw_pca(t(iris[,1:4]),iris$Species,
color.label = "Species",
style = 'ggplot2')
p1+theme_bw()+ggtitle("PCA for isis")
draw_pca(t(iris[,1:4]),iris$Species)
draw_pca(t(iris[,1:4]),iris$Species)
draw_pca(t(iris[,1:4]),iris$Species)+theme_bw()
p1
p1+theme_bw()+ggtitle("PCA for isis")
draw_pca(t(iris[,1:4]),iris$Species)
p1+theme_bw()+ggtitle(Individuals - PCA)+xlab('Dim1 (73%)')+ylab('Dim2 (22.9%)')
p1+theme_bw()+ggtitle('Individuals - PCA')+xlab('Dim1 (73%)')+ylab('Dim2 (22.9%)')
p1+theme_prism()+ggtitle('Individuals - PCA')+xlab('Dim1 (73%)')+ylab('Dim2 (22.9%)')
exp <-  matrix(rnorm(60),nrow = 10)
colnames(exp) <- paste0("sample",1:6)
rownames(exp) <- paste0("gene",1:10)
exp[1:4,1:4]
View(exp)
group_list <- factor(rep(c("A","B"),each = 3))
draw_pca(exp,group_list)
exp <-  matrix(rnorm(60),nrow = 10)
colnames(exp) <- paste0("sample",1:10)
rownames(exp) <- paste0("gene",1:10)
exp <-  matrix(rnorm(80),nrow = 10)
colnames(exp) <- paste0("sample",1:8)
rownames(exp) <- paste0("gene",1:10)
View(exp)
group_list <- factor(rep(c("A","B"),each = 4))
draw_pca(exp,group_list)
View(exp)
exp <-  matrix(rnorm(120),nrow = 15)
colnames(exp) <- paste0("sample",1:8)
rownames(exp) <- paste0("gene",1:15)
View(exp)
draw_pca(exp,group_list)
draw_pca(exp,group_list,color = c("blue","red"))
draw_pca(t(iris[,1:4]),iris$Species,
addEllipses = F # 不加圈)
)
draw_tsne(exp,group_list)
exp <-  matrix(rnorm(10000),nrow = 50)
colnames(exp) <- paste0("sample",1:200)
rownames(exp) <- paste0("gene",1:50
）
exp <-  matrix(rnorm(10000),nrow = 50)
colnames(exp) <- paste0("sample",1:200)
rownames(exp) <- paste0("gene",1:50)
View(exp)
exp[,1:100] = exp[,1:100]+10
group_list <- factor(rep(c("A","B"),each = 100))
draw_tsne(exp,group_list)
head(deseq_data)
rm(list = ls())
x = list(Deseq2=sample(1:100,30),edgeR = sample(1:100,30),limma = sample(1:100,30))
View(x)
draw_venn(x,"test")
draw_venn(x,"test",color = c("darkgreen", "darkblue", "#B2182B"))
x = ToothGrowth
dumd(ToothGrowth)
View(x)
df = data.frame(a = c("gene1","gene2","gene3"),
b = c("d,f,a,b",
"c,e,g",
"a,b,d"))
View(df)
edges = interaction_to_edges(df)
View(edges)
View(df)
View(edges)
nodes = edges_to_nodes(edges)
View(nodes)
rm(list = ls())
blogdown:::new_post_addin()
head(genes)
genes
l<-genes
remove(genes)
remove(l)
g = quick_enrich(genes,destdir = tempdir())
g
View(g)
names(g)
typeof(g)
typeof(g$kk)
typeof(g$kk.dot)
kk.dot
g$kk.dot
g$go.dot
kk<-data.frame(g$kk)
View(kk)
enrichplot::cnetplot(g$kk)
go<-data.frame(g$go)
g[[1]][1:4,1:4]
View(go)
enrichplot::cnetplot(g$go.dot)
cnetplot(kk)
library(enrichplot)
cnetplot(kk)
cnetplot(g$kk)
k<-g$kk
cnetplot(k)
cnetplot(g$kk,foldChange = genes)
cnetplot(g$kk,foldChange = genes, circular = TRUE, colorEdge = TRUE)
cnetplot(g$kk,foldChange = genes,categorySize="pvalue")
cnetplot(g$kk,circular = TRUE, colorEdge = TRUE)
cnetplot(k, node_label="none",
color_category='firebrick',
color_gene='steelblue')
heatplot(k)
edox<-pairwise_termsim(g$kk)
treeplot(edox)
emapplot(edox)
emapplot(edox，cex_category=1.5)
emapplot(edox，cex_category=1.5)
emapplot(edox,cex_category=1.5)
upsetplot(edo)
upsetplot(g$kk)
ridgeplot(g$kk)
ridgeplot(edo)
ridgeplot(edox)
deg
d<-double_enrich(deg)
d
View(d)
data.frame(d$kp)
d$kp$data
KEGG<-d$kp$data
View(KEGG)
d$kp+ggplot2::ylab(log10 (Pvalue))
d$kp+ggplot2::ylab(log10 Pvalue)
d$kp+ggplot2::ylab('log10 (Pvalue)')
d$kp+ylab('log10 (Pvalue)') +xlab()
d$kp+ylab('log10 (Pvalue)') +xlab(NULL)
cowplot::plot_grid(d$kp,d$gp,ncol = 1,labels = "AUTO")
pkegg<- d$kp+
ylab('log10 (Pvalue)') +
xlab(NULL)+
ggtitle("KEGG")
stringr::scale_x_discrete(labels=function(x) str_wrap(x, width=45))
pgo<-d$gp+
ylab('log10 (Pvalue)') +
xlab(NULL)+
ggtitle("GO")
stringr::scale_x_discrete(labels=function(x) str_wrap(x, width=45))
cowplot::plot_grid(pkegg,pgo,
ncol = 1, # 设置成一列
labels = "AUTO" # 加个ABC
)
d$kp+
ylab('log10 (Pvalue)') +
xlab(NULL)+
stringr::scale_x_discrete(labels=function(x) str_wrap(x, width=45))
d$kp+
ylab('log10 (Pvalue)') +
xlab(NULL)
d$kp+
ylab('log10 (Pvalue)') +
xlab(NULL)+stringr::scale_y_discrete(labels=function(y) str_wrap(y, width=45))
library(stringr)
d$kp+
ylab('log10 (Pvalue)') +
xlab(NULL)+
stringr::scale_x_discrete(labels=function(x) str_wrap(x, width=45))
d$kp+
ylab('log10 (Pvalue)') +
xlab(NULL)+
scale_x_discrete(labels=function(x) str_wrap(x, width=45))
pkegg<- d$kp+
ylab('log10 (Pvalue)') +
xlab(NULL)+
ggtitle("KEGG")+
scale_x_discrete(labels=function(x) str_wrap(x, width=45))
pgo<-d$gp+
ylab('log10 (Pvalue)') +
xlab(NULL)+
ggtitle("GO")+
scale_x_discrete(labels=function(x) str_wrap(x, width=45))
cowplot::plot_grid(pkegg,pgo,
ncol = 1, # 设置成一列
labels = "AUTO" # 加个ABC
)
rm(list = ls())
install.packages("ggcharts")
library(ggcharts)
blogdown:::new_post_addin()
dumbbell_chart(popeurope, country, pop1952, pop2007)
column_chart(revenue_roche, year, revenue)
data(biomedicalrevenue)
revenue2018 <- biomedicalrevenue[biomedicalrevenue$year == 2018, ]
revenue_roche <- biomedicalrevenue[biomedicalrevenue$company == "Roche", ]
View(revenue2018)
bar_chart(revenue2018, company, revenue)
bar_chart(mtcars, cyl)
column_chart(revenue_roche, year, revenue)
bar_chart(revenue2018, company, revenue, threshold = 40)
library(dplyr)
library(ggplot2)
library(ggcharts)
data("biomedicalrevenue")
biomedicalrevenue %>%
filter(year %in% c(2012, 2015, 2018)) %>%
group_by(year) %>%
top_n(10, revenue) %>%
ungroup() %>%
mutate(company = tidytext::reorder_within(company, revenue, year)) %>%
ggplot(aes(company, revenue)) +
geom_col() +
coord_flip() +
tidytext::scale_x_reordered() +
facet_wrap(vars(year), scales = "free_y")
biomedicalrevenue%>%
filter(year%in%c(2012,2015,2018))%>%
group_by(year)%>%
top_n(10,revenue)%>%
ungroup()%>%
mutate(company=tidytext::reorder_within(company,revenue,year))%>%
ggplot(aes(company,revenue))+
geom_col()+
coord_flip()+
tidytext::scale_x_reordered()+
facet_wrap(vars(year),scales="free_y")
install.packages("tidytext")
biomedicalrevenue%>%
filter(year%in%c(2012,2015,2018))%>%
group_by(year)%>%
top_n(10,revenue)%>%
ungroup()%>%
mutate(company=tidytext::reorder_within(company,revenue,year))%>%
ggplot(aes(company,revenue))+
geom_col()+
coord_flip()+
tidytext::scale_x_reordered()+
facet_wrap(vars(year),scales="free_y")
biomedicalrevenue%>%
filter(year%in%c(2012,2015,2018))%>%
group_by(year)%>%
top_n(10,revenue)%>%
ungroup()%>%
mutate(company=tidytext::reorder_within(company,revenue,year))%>%
ggplot(aes(company,revenue))+
geom_col()+
coord_flip()+
facet_wrap(vars(year),scales="free_y")
biomedicalrevenue %>%
filter(year %in% c(2012, 2015, 2018)) %>%
bar_chart(x = company, y = revenue, facet = year, top_n = 10)
biomedicalrevenue %>%
filter(year %in% c(2012, 2015, 2018)) %>%
bar_chart(x = company, y = revenue, facet = year, top_n = 10)
data("revenue_wide")
line_chart(data = revenue_wide, x = year, y = Roche:Bayer) +
labs(x = "Year", y = "Revenue (Billion USD)")
lollipop_chart(data = revenue_wide, x = year, y = Roche:Bayer) +
labs(x = "Year", y = "Revenue (Billion USD)")
data("revenue_wide")
lollipop_chart(data = revenue_wide, x = year, y = Roche:Bayer) +
labs(x = "Year", y = "Revenue (Billion USD)")
remotes::install_github("thomas-neitmann/ggcharts", upgrade = "never")
remotes::install_git('https://hub.fastgit.xyz/thomas-neitmann/ggcharts')
remotes::install_local('/Users/mac/Downloads/ggcharts-master.zip')
detach("package:ggcharts", unload = TRUE)
library(ggcharts)
data("revenue_wide")
line_chart(data = revenue_wide, x = year, y = Roche:Bayer) +
labs(x = "Year", y = "Revenue (Billion USD)")
